// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum UserRole{
  USER
  ADMIN
}

model User{
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  role     UserRole @default(USER)
  todos    Todo[]
  todoMember TodoMember[]
  @@map("users")
}

enum TodoStatus{
  PENDING
  PROGRESS
  COMPLETED
}
model Todo{
  id        String   @id @default(uuid())
  title     String
  status    TodoStatus @default(PENDING)
  ownerId    String
  isPublic  Boolean  @default(false)
  user      User     @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  todoMember TodoMember[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@map("todos")
}

model TodoMember{
  id        String   @id @default(uuid())
  todoId    String
  userId    String
  todo      Todo     @relation(fields: [todoId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@unique([todoId, userId])
  @@map("todo_members")
}